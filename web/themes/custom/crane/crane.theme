<?php

/**
 * @file
 * Functions to support theming in the Adminimal theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Template\Attribute;
use Drupal\user\Entity\User;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function crane_preprocess_html(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  $pathName =  preg_replace('/\W+/','-',strtolower($route_name));
  $bodyClasses = 'crane ' . $pathName;
  // Add classes to the body.
  if ($variables['attributes'] instanceof Attribute) {
    $variables['attributes']->addClass($bodyClasses);
  }
  else {
    $variables['attributes']['class'][] = $bodyClasses;
  }
  $preconnect = [
    '#tag' => 'meta',
    '#attributes' => [
      'href' => 'https://fonts.googleapis.com',
      'rel' => 'preconnect',
    ],
  ];
  $preload = [
    '#tag' => 'meta',
    '#attributes' => [
      'rel' => 'preload',
      'href' => 'https://fonts.googleapis.com/css?family=PT+Sans:400,400i,700,700i&display=swap',
      'as' => 'style',
    ],
  ];


  $variables['page']['#attached']['html_head'][] = [$preconnect, 'preconnect'];
  $variables['page']['#attached']['html_head'][] = [$preload, 'preload'];
}

/**
 * Implements hook_preprocess_page.
 */
function crane_preprocess_page(&$variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  $variables['pathName'] =  preg_replace('/\W+/','-',strtolower($route_name));

  //get the site name and pass to page template
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');

  //find the logged in user's first name and pass to branding block
  $user = User::load(\Drupal::currentUser()->id());
  $variables['fname'] = $user->field_first_name;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function crane_form_system_theme_settings_alter(array &$form, FormStateInterface $form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }
  if ($form_state->has('entity_browser')) {
    $form['#attached']['library'][] = 'citizen_custom/browser';
  }
  if ($form['adminimal_theme_settings']) {
    unset($form['adminimal_theme_settings']);
  }
  if ($form['adminimal_custom']) {
    unset($form['adminimal_custom']);
  }

  $form['theme_settings']['#open'] = FALSE;
  unset($form['theme_settings']['toggle_node_user_picture']);
  unset($form['theme_settings']['toggle_comment_user_picture']);
  unset($form['theme_settings']['toggle_comment_user_verification']);

  $form['logo']['#open'] = FALSE;
  $form['favicon']['#open'] = FALSE;
}

/**
 * Implements hook_preprocess_MENU_LOCAL_ACTIONS() for menu-local-action templates.
 */
function crane_preprocess_menu_local_action(array &$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'button--small-override';
}

/**
 * Implements hook_preprocess_BLOCK() for block templates.
 */
function crane_preprocess_block(&$variables) {
  if($variables['elements']['#id'] == 'crane_secondary_local_tasks' ){
    $secondaryTasks = $variables['content']['#secondary'];
    $taskClass = array();
    foreach($secondaryTasks as $task){
      $taskClass[] = preg_replace('/\W+/','-',strtolower($task['#link']['title']));
    }
    $variables['secondaryClasses'] = implode(' ',$taskClass);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function crane_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#form_id'])) {
    $id = $variables['element']['#form_id'];
    array_push($suggestions, 'form__' . $id);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function crane_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.edit_form') {
    $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
    $term = Term::load($tid);
    $suggestions[] = 'page__taxonomy__' . $term->bundle();
  }
}
