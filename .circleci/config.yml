# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:8.x-php8.2
  working_directory: ~/example_drops_8_composer
  environment:
    TZ: "/usr/share/zoneinfo/America/Menominee"
    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    # BUILD_TOOLS_VERSION: ^2.0.0-alpha4
    TERM: dumb

version: 2
jobs:
  configure_env_vars:
    <<: *defaults

    docker:
    - image: quay.io/pantheon-public/build-tools-ci:8.x-php8.2

    steps:
      - checkout

      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/4.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: clone-bash-env
          command: cp $BASH_ENV bash_env.txt

      # https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
      - persist_to_workspace:
          root: .
          paths:
            - bash_env.txt

  # @todo: common initialization: 'composer install' for the site-under-test
  unit:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - composer-cache

      - run:
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: run composer install to get the vendor directory
          command: composer install

      - save_cache:
          key: composer-cache
          paths:
            - $HOME/.composer/cache

  functional:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
            - composer-cache

      - run:
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: log in
          command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

      - run:
          name: install dev dependencies, build assets, etc.
          command: ./.ci/scripts/01-prepare

      - run:
          name: build assets
          command: composer -n build-assets

      - run:
          name: prepare database for site-under test
          command: ./.ci/scripts/02-init-site-under-test-clone-existing
          # command: ./.ci/scripts/02-init-site-under-test-reinstall-new

      - run:
          name: run composer install again to get dev dependencies
          command: composer install

      #- run:
      #    name: run functional tests with Behat
      #    command: ./.ci/scripts/03-test

      - run:
          name: post-test actions
          command: ./.ci/scripts/04-post-test

      - run:
          name: handle merge to master (if needed)
          command: ./.ci/scripts/05-merge-master

      - run:
          name: remove transient test fixtures
          command: ./.ci/scripts/09-cleanup-fixtures


workflows:
  version: 2
  build_and_test:
    jobs:
      # Set up environment variables
      - configure_env_vars
      # Install dev dependencies and do simple tests (sniff, unit tests, etc.)
      - unit
      # Build deploy and test on target platform
      - functional
      # Deploy before running visual test
